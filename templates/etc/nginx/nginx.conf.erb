
user nginx;
worker_processes 4;
pid /run/nginx.pid;

events {
  worker_connections 768;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 0;
  underscores_in_headers on;

  # Allow for large headers
  large_client_header_buffers 4 32k;

  # http://stackoverflow.com/a/3710649
  proxy_buffers 8 16k;
  proxy_buffer_size 32k;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Mirror default "combined" log format, but with Proxy Protocol address
  log_format proxy_log '$proxy_protocol_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent"';

  # /dev/stdout is a symlink, pointing to /proc/self/fd/1.
  # docker <0.12.0 has issues writing to it (on alpine?) for some reason.
  access_log /proc/self/fd/1;
  error_log /proc/self/fd/1;

  gzip on;
  gzip_disable "msie6";
  gzip_types application/json application/javascript text/css;
  gzip_vary on;

  ssl_ciphers <%= ENV['SSL_CIPHERS'] %>;
  ssl_protocols <%= ENV['SSL_PROTOCOLS'] %>;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/dhparams.pem;

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*.conf;


  upstream mirth_http {
    server mirth:3001;
  }


  upstream web_http {
    server web:3000;
  }

  upstream kibana_http {
    server web:3000;
  }

  server {

    listen 80;
    server_name mirth.dorsata-dev.com


    keepalive_timeout 5;

    error_page 502 503 504 /50x.html;
    location /50x.html {
    }

    location / {


      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Request-Start "t=${msec}";
      proxy_redirect off;


      proxy_pass http://mirth_http;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      break;
    }
  }

  server {

    listen 80;
    server_name dorsata-dev.com


    keepalive_timeout 5;

    error_page 502 503 504 /50x.html;
    location /50x.html {
    }

    location / {


      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Request-Start "t=${msec}";
      proxy_redirect off;


      proxy_pass http://web_http;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      break;
    }
  }


  server {

    <% if ENV['PROXY_PROTOCOL'] == 'true' %>
    listen 443 proxy_protocol;

    set_real_ip_from 0.0.0.0/0;
    real_ip_header proxy_protocol;

    access_log /proc/self/fd/1 proxy_log;
    <% else %>
    listen 443;
    <% end %>

    ssl on;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    keepalive_timeout 5;

    error_page 502 503 504 /50x.html;
    location /50x.html {
    }

    <% if ENV['FORCE_SSL'] == 'true' %>
    add_header Strict-Transport-Security max-age=<%= ENV['HSTS_MAX_AGE'] || 31536000 %>;
    <% end %>

    server_name mirth.dorsata-dev.com;



    location / {
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Request-Start "t=${msec}";
      proxy_redirect off;


      proxy_pass http://mirth_http;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      break;
    }
  }



  server {

    listen 80;
    server_name kibana.dorsata-dev.com


    keepalive_timeout 5;

    error_page 502 503 504 /50x.html;
    location /50x.html {
    }

    location / {


      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Request-Start "t=${msec}";
      proxy_redirect off;


      proxy_pass http://kibana_http;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

      break;
    }
  }



}

daemon off;

